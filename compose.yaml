services:
  ab-mongo:
    image: mongo:7
    container_name: ab-mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: apibench
      MONGO_INITDB_ROOT_PASSWORD: apibench
      MONGO_INITDB_DATABASE: apibench
    volumes:
      - ./data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ab-network

  ab-mongo-express:
    image: mongo-express
    container_name: ab-mongo-express
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_SERVER: ab-mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: apibench
      ME_CONFIG_MONGODB_ADMINPASSWORD: apibench
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://ab-mongo:27017
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081"]
      interval: 5s
      retries: 5
    depends_on:
      ab-mongo:
        condition: service_healthy
    networks:
      - ab-network

  ab-wait-for-dependencies:
    image: ducktors/docker-wait-for-dependencies
    depends_on:
      - ab-mongo
      - ab-mongo-express
    container_name: ab-wait-for-dependencies
    command: ab-mongo:27017 ab-mongo-express:8081
    networks:
      - ab-network

networks:
  ab-network: